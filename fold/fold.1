.\"
.\" Copyright (c) 2003 Gunnar Ritter
.\"
.\" SPDX-Licence-Identifier: Zlib
.\"
.\" Sccsid @(#)fold.1	1.4 (gritter) 12/6/04
.TH FOLD 1 "12/6/04" "Heirloom Toolchest" "User Commands"
.SH NAME
fold \- fold long lines
.SH SYNOPSIS
\fBfold\fR [\fB\-b\fR] [\fB\-s\fR] [\fB\-w\ \fIwidth\fR | \fB\-\fIwidth\fR]
[\fIfile\ ...\fR]
.SH DESCRIPTION
.I Fold
reads its input
.IR files ,
or of standard input if no
.I file
argument is present,
and folds lines that exceed 80 columns
(i.\|e. it inserts newline characters).
It interprets backspace, tabulator,
and carriage return characters in input.
.PP
The following options are accepted by
.IR fold :
.TP
.B \-b
Use bytes instead of columns.
All characters except for the newline character
are counted according to the space consumed in bytes.
This option has been introduced by POSIX.2.
.TP
.B \-s
Try to preserve words, if possible.
If a blank character appears in an input line
before it exceeds the width limit,
the line is prematurely folded after this character.
This option has been introduced by POSIX.2.
.TP
.B \-w\fI width\fR
Set the maximum output line length (in columns or bytes) to
.I width
instead of the default 80.
.SH "ENVIRONMENT VARIABLES"
.TP
.BR LANG ", " LC_ALL
See
.IR locale (7).
.TP
.B LC_CTYPE
Determines the mapping of bytes to characters
and the set of blank characters.
Multibyte characters are not split by
.IR fold ;
the line is folded before the character
that would cause it to exceed the maximum width.
.SH "SEE ALSO"
fmt(1),
pr(1)
