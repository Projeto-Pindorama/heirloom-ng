.\"
.\" Copyright (c) 2023 Luiz Ant√¥nio Rangel
.\"
.\" SPDX-Licence-Identifier: Zlib
.\"
.TH READLINK 1 "04/12/23" "Heirloom Toolchest" "User Commands"
.SH NAME
readlink \- displays the target of a symbolic link
.SH SYNOPSIS
\fBreadlink\fR [\fB\-fn\fR] \fIfile(s)\fR ...
.SH DESCRIPTION
.B The readlink
utility, when called with one or more pathes of a
symbolic link as its argument, displays the real
path/target of it at the standard output.

.PP
It accepts the following options:
.TP
.B \-f
Follows the symbolic link until it reaches the original
target, recursively.
.TP
.B \-n
Does not print a newline character at the end of the
output string.
This option is ignored if readlink is used with more than
one path as its argument.
.PP
If
.B readlink
is invoked without the
.B \-f
option and with a non-symbolic link path as its argument,
the path will not be printed to the screen.
.SH EXAMPLES
The readlink utility may be used at shell scripts
for displaying/modifying the real file behind a symbolic
link.
.PP
For instance, here is an example of how to read both the current
directory and the path of a program behind a process on the
.B /proc
directory.
.IP \& 2
.BI "readlink \-f /proc/\`ps -a | nawk '/vim/{ print $1; exit}'\`/{cwd,exe}"
.LP
.SH "SEE ALSO"
ln(1),
ls(1),
file(1),
readlink(2),
realpath(3)
.SH HISTORY
The
.B readlink
utility first appeared
in OpenBSD 2.1, NetBSD 1.6 and FreeBSD 4.10.
.PP
The GNU variant, which supports multiple files as input,
was written by Dmitry V. Levin and first appeared in
GNU coreutils 4.5.5 in February 2, 2003.
